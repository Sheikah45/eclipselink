<!--

    Copyright (c) 2024 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0,
    or the Eclipse Distribution License v. 1.0 which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>org.eclipse.persistence.jpa.testapps</artifactId>
        <groupId>org.eclipse.persistence</groupId>
        <version>5.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>org.eclipse.persistence.jpa.testapps.batchfetch</artifactId>

    <name>Test - batchfetch</name>

    <properties>
        <argLine/>
    </properties>

    <build>
        <plugins>
            <!-- generate canonical metamodel classes -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <!-- turn-off default compilation -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- turn-on compilation with canonical model processor -->
                    <execution>
                        <id>compile-with-processor</id>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!--Resolve dependencies into Maven properties like ${org.eclipse.persistence:org.eclipse.persistence.jpa:jar} for JPA module-->
                    <execution>
                        <id>get-test-classpath-to-properties</id>
                        <phase>process-test-classes</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- start/stop in-memory derby before/after the test -->
            <plugin>
                <groupId>org.carlspring.maven</groupId>
                <artifactId>derby-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-derby</id>
                        <phase>process-test-classes</phase>
                    </execution>
                    <execution>
                        <id>stop-derby</id>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <!-- turn on dynamic weaving -->
                            <argLine>-javaagent:${org.eclipse.persistence:org.eclipse.persistence.jpa:jar} @{argLine}</argLine>
                        </configuration>
                    </execution>
                    <execution>
                        <id>server-test</id>
                        <configuration>
                            <!-- exclude some tests from server-side run -->
                            <excludes>
                                <exclude>**/EntityManagerImplTest</exclude>
                                <exclude>**/EntityManagerFactoryImplTest</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <!-- package model for other test apps to use -->
                    <execution>
                        <id>package-model</id>
                        <phase>package</phase>
                    </execution>
                    <!-- package tests for other test apps to use -->
                    <execution>
                        <id>package-se-tests</id>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- for Oracle DB -->
            <id>oracle</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <configuration>
                            <username>${db.user}</username>
                            <password>${db.pwd}</password>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                        </configuration>
                        <executions>
                            <!-- prepare DB object (type) for struct-converter -->
                            <execution>
                                <id>struct-converter-sql</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>
                                        CREATE OR REPLACE TYPE MY_GEOMETRY AS OBJECT (id NUMBER, geom MDSYS.SDO_GEOMETRY);
                                    </sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>